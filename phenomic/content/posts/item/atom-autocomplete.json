{"filename":"index.md","title":"L'autocomplétion dans Atom","headings":[{"level":2,"text":"La base : autocomplete-plus","id":"la-base--autocomplete-plus"},{"level":2,"text":"De l'autocomplétion JavaScript","id":"de-lautocomplétion-javascript"},{"level":3,"text":"L'autocomplétion \"classique\"","id":"lautocomplétion-classique"},{"level":3,"text":"L'autocomplétion d'import de modules","id":"lautocomplétion-dimport-de-modules"},{"level":2,"text":"De l'autocomplétion PHP","id":"de-lautocomplétion-php"},{"level":3,"text":"L'autocomplétion générale","id":"lautocomplétion-générale"},{"level":3,"text":"L'autocomplétion Symfony","id":"lautocomplétion-symfony"}],"date":"2016-11-08","timeSensitive":true,"body":{"t":"div","c":[{"t":"p","c":["Il y a un peu plus de 2 ans, j'expliquais pourquoi ",{"t":"a","p":{"href":"/articles/sublime-text-ide-a-la-carte/"},"c":["je préfère les éditeurs de\ntexte légers aux gros IDE"]},". C'est\ntoujours le cas, à la différence près que j'ai abandonné Sublime Text pour\nAtom. Cette préférence a un inconvénient qui découle d'un avantage majeur : il\nn'y a pas de véritable autocomplétion pré-packagée. Evidemment, puisque dans ce\ngenre d'éditeur, l'intégration de fonctionnalités spécifique est laissée à\nl'appréciation de l'utilisateur. Intégrer de l'autocomplétion pour les langages\nqu'on utilise n'a rien de complexe, il faut juste prendre 5 minutes pour s'y\npencher. De mon côté, j'ai besoin d'autocomplétion sur du JavaScript, du PHP et\nle framework Symfony."]},"\n",{"t":"h2","p":{"id":"la-base--autocomplete-plus"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#la-base--autocomplete-plus"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"La base : ",{"t":"code","c":["autocomplete-plus"]}]},"\n",{"t":"p","c":[{"t":"a","p":{"href":"https://atom.io/packages/autocomplete-plus"},"c":[{"t":"code","c":["autocomplete-plus"]}]}," est le\nprovider de base de toute autocomplétion dans Atom. Celui-ci est prépackagé\navec Atom. Il propose de base un provider simple, le ",{"t":"code","c":["SymbolProvider"]}," qui\npropose une autocomplétion basée sur les \"symboles\" (en gros, les mots)\nprésents dans le fichier en cours d'édition."]},"\n",{"t":"p","c":["Ce package est la base car il propose une API sur laquelle d'autres providers\npeuvent venir s'appuyer pour proposer une autocomplétion plus spécifique et\nefficace. Et les providers sont nombreux. Pour s'en convaincre, il suffit de\nfaire une ",{"t":"a","p":{"href":"https://atom.io/packages/search?utf8=%E2%9C%93&q=autocomplete"},"c":["petite recherche sur le site\nd'Atom"]},"."]},"\n",{"t":"h2","p":{"id":"de-lautocomplétion-javascript"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#de-lautocomplétion-javascript"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"De l'autocomplétion JavaScript"]},"\n",{"t":"p","c":["En JavaScript, on a besoin d'autocomplétion pour le langage en général\n(classes, fonctions, variables...), mais aussi pour l'import de modules."]},"\n",{"t":"h3","p":{"id":"lautocomplétion-classique"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#lautocomplétion-classique"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"L'autocomplétion \"classique\""]},"\n",{"t":"p","c":["Pour ça, on va utiliser ",{"t":"a","p":{"href":"https://atom.io/packages/atom-ternjs"},"c":[{"t":"code","c":["atom-ternjs"]}]},"\nqui se base sur ",{"t":"a","p":{"href":"https://github.com/ternjs/tern"},"c":["Tern"]}," et ",{"t":"code","c":["autocomplete-plus"]},"\npour fournir une autocomplétion très efficace pour JavaScript."]},"\n",{"t":"p","c":["Tern doit être configuré pour chaque projet, ce qui nous laisse la main pour\ndéfinir les librairies externes qu'on veut utiliser. En effet, Tern est capable\nde nous proposer de l'autocomplete pour l'API de jQuery, d'AngularJS, NodeJS\n(et bien d'autres) si on le lui demande. Cette configuration peut bien\névidemment évoluer au cours de la vie du projet. Il suffira alors de modifier\nle fichier de configuration en y ajoutant ou en enlevant les plugins souhaités."]},"\n",{"t":"p","c":[{"t":"img","p":{"src":"/posts/atom-autocomplete/atom-ternjs-example.jpg","alt":"Autocomplétion dans une classe JavaScript"}}]},"\n",{"t":"h3","p":{"id":"lautocomplétion-dimport-de-modules"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#lautocomplétion-dimport-de-modules"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"L'autocomplétion d'import de modules"]},"\n",{"t":"p","c":["Pour ne pas avoir à se souvenir de tous les noms des modules qu'on utilise, on\nva utiliser\n",{"t":"a","p":{"href":"https://atom.io/packages/autocomplete-modules"},"c":[{"t":"code","c":["autocomplete-modules"]}]},". Ce\npackage analyse notre dossier ",{"t":"code","c":["node_modules"]}," et nous propose les noms des\nmodules qui s'y trouvent lorsqu'on est en train de taper un ",{"t":"code","c":["require('toto')"]},"\nou un ",{"t":"code","c":["import toto from 'toto'"]},". Il nous propose aussi nos modules locaux si le\nnom qu'on est en train de taper commence par ",{"t":"code","c":["./"]}," ou ",{"t":"code","c":["../"]},"."]},"\n",{"t":"p","c":[{"t":"img","p":{"src":"/posts/atom-autocomplete/autocomplete-modules-example.jpg","alt":"Autocomplétion d'import de modules"}}]},"\n",{"t":"h2","p":{"id":"de-lautocomplétion-php"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#de-lautocomplétion-php"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"De l'autocomplétion PHP"]},"\n",{"t":"p","c":["Pour PHP, comme pour JavaScript, on a bien entendu besoin d'une autocomplétion\ngénérale pour l'ensemble du langage. Mais puisque je travaille majoritairement\navec le framework Symfony, j'ai aussi besoin de choses propres à celui-ci, pour\nle nom des services par exemple."]},"\n",{"t":"h3","p":{"id":"lautocomplétion-générale"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#lautocomplétion-générale"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"L'autocomplétion générale"]},"\n",{"t":"p","c":["Pour l'autocomplétion générale en PHP,\n",{"t":"a","p":{"href":"https://atom.io/packages/atom-autocomplete-php"},"c":[{"t":"code","c":["atom-autocomplete-php"]}]}," fait\nun très bon travail. Celui-ci s'appuie sur Composer et les blocs de\ndocumentation présents dans le code. Pour qu'il fonctionne, il faut spécifier\nle chemin vers votre Composer et votre PHP. Les deux autres paramètres\n\"Autoload file\" et \"Classmap files\" peuvent être laissés à leur valeur par\ndéfaut pour une utilisation classique de Composer."]},"\n",{"t":"p","c":[{"t":"img","p":{"src":"/posts/atom-autocomplete/atom-autocomplete-php-example.jpg","alt":"Autocomplétion PHP"}}]},"\n",{"t":"h3","p":{"id":"lautocomplétion-symfony"},"c":[{"t":"a","p":{"aria-hidden":true,"href":"#lautocomplétion-symfony"},"c":[{"t":"span","p":{"className":"icon icon-link"}}]},"L'autocomplétion Symfony"]},"\n",{"t":"p","c":["Ici, c'est sur ",{"t":"a","p":{"href":"https://atom.io/packages/atom-symfony2"},"c":[{"t":"code","c":["atom-symfony2"]}]}," qu'on\nva compter. Celui-ci propose de l'autocomplétion sur différentes choses.\nD'abord, dans les fichiers de configuration, il propose de l'autocomplétion sur\nles noms de services et sur les classes. Ensuite, dans une classe utilisant le\nconteneur d'injection de dépendance, celui-ci propose de l'autocomplétion sur\nles noms de services."]},"\n",{"t":"p","c":["Pour fonctionner, celui-ci nécessite qu'on ait installé\n",{"t":"code","c":["atom-autocomplete-php"]},", que celui-ci soit fonctionnel, et qu'on ait bien\nspécifier le chemin du fichier ",{"t":"code","c":["console"]}," dnas la configuration. Pour ce dernier\ndétail, si on travaille avec Symfony 2, on peut laisser la valeur par défaut\n(",{"t":"code","c":["app/console"]},"). Mais si on travaille avec Symfony 3, il faut spécifier le\nnouvel emplacement de ce fichier : ",{"t":"code","c":["bin/console"]},"."]},"\n",{"t":"p","c":[{"t":"img","p":{"src":"/posts/atom-autocomplete/atom-symfony2-example.jpg","alt":"Autocomplétion de services dans un contrôleur Symfony"}}]},"\n",{"t":"p","c":["Et voici. Pour avoir de l'autocomplete sur d'autres langages, il vous suffit de\ntrouver et d'installer un plugin pour le ou les langages qui vous intéressent.\nIl y a très peu de chance qu'un tel plugin n'existe pas déjà."]},"\n",{"t":"p","c":["Petit bonus, pour ne pas avoir à installer les mêmes packages deux fois (au\nboulot et à la maison), vous pouvez utiliser\n",{"t":"a","p":{"href":"https://atom.io/packages/sync-settings"},"c":[{"t":"code","c":["sync-settings"]}]},"."]}]}}